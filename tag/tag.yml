swagger: '2.0'
info:
  description: Publish and manage timestamped key-value-pair data.
  version: '1'
  title: SystemLink Tag Service
  contact:
    name: National Instruments
    url: 'https://www.ni.com/systemlink'
    email: support@ni.com
basePath: /nitag
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  apiKeyAuth:
    type: apiKey
    name: x-ni-api-key
    in: header
  basicAuth:
    type: basic
security:
  - apiKeyAuth: []
  - basicAuth: []

responses:
  Unauthorized:
    description: Not authorized
    headers:
      WWW_Authenticate:
        description: Information for how to authenticate (sent only from SystemLink Server).
        type: string
  Error:
    description: Error (sent only from SystemLink Server)
    schema:
      description: Error response
      title: ErrorResponse
      type: object
      properties:
        error:
          $ref: '#/definitions/Error'

paths:
  /v2/subscriptions:
    post:
      tags:
        - subscriptions
      summary: 'Create subscription'
      description: Create a subscription for a list of tags to get notifications when the tags change.
      operationId: CreateSubscription
      parameters:
        - in: body
          name: subscription
          description: The subscription to create
          schema:
            $ref: '#/definitions/Subscription'
          required: false
      responses:
        200:
          description: Success
          schema:
            description: The response for creating a subscription
            type: object
            title: Create Subscription Response
            properties:
              subscriptionId:
                description: The unique identifier of the subscription
                type: string
              nonexistentTags:
                description: A list of tags which did not exist
                type: array
                items:
                  type: string
              alias:
                type: string
                description: The name of the subscription
        400:
          description: Bad Request
        401:
          $ref: '#/responses/Unauthorized'
        default:
          $ref: '#/responses/Error'
    get:
      tags:
        - subscriptions
      summary: 'Get active subscription IDs'
      description: Get a list of all active subscription IDs
      operationId: GetSubscriptions
      parameters: []
      responses:
        200:
          description: Success
          schema:
            description: Get subscriptions response
            type: object
            title: Get Subscriptions Response
            properties:
              subscriptionIds:
                description: List of all the active subscription IDs
                type: array
                items:
                  type: string
        401:
          $ref: '#/responses/Unauthorized'
        default:
          $ref: '#/responses/Error'
  /v2/subscriptions/{id}:
    get:
      tags:
        - subscriptions
      summary: 'Get subscription'
      description: Get a subscription's metadata
      operationId: GetSubscription
      parameters:
        - in: path
          name: id
          description: Subscription ID
          type: string
          required: true
      responses:
        200:
          schema:
            $ref: '#/definitions/Subscription'
          description: Success
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Subscription with the given ID was not found
        default:
          $ref: '#/responses/Error'
    delete:
      tags:
        - subscriptions
      summary: 'Delete a subscription'
      description: Delete a specific subscription.
      operationId: DeleteSubscription
      parameters:
        - in: path
          name: id
          description: Subscription ID
          type: string
          required: true
      responses:
        204:
          description: Successfully deleted
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Subscription with the given ID was not found
        default:
          $ref: '#/responses/Error'
  /v2/subscriptions/{id}/heartbeat:
    put:
      tags:
        - subscriptions
      summary: 'Update the heartbeat timer for a subscription'
      description: Update the heartbeat timer for the specified subscription
      operationId: UpdateSubscriptionHeartbeat
      parameters:
        - in: path
          name: id
          description: The subscription ID
          type: string
          required: true
      responses:
        200:
          description: Success
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Subscription with the given ID not found
        default:
          $ref: '#/responses/Error'
  /v2/subscriptions/{id}/values/current:
    get:
      tags:
        - subscriptions
      summary: 'Get the current values for the tags in a subscription'
      description: Get the current values for tags in the subscription (either all or changed only based on a query parameter).
      operationId: GetSubscriptionTagValues
      parameters:
        - in: path
          name: id
          description: Subscription ID
          type: string
          required: true
      responses:
        200:
          schema:
            $ref: '#/definitions/SubscriptionUpdates'
          description: Success
        401:
          $ref: '#/responses/Unauthorized'
        default:
          $ref: '#/responses/Error'
  /v2/tags-rpc/subscriptions/heartbeat:
    post:
      tags:
        - subscriptions
      summary: 'Update the heartbeat timer of multiple subscriptions'
      description: Updates the heartbeat timers of multiple subscriptions
      operationId: UpdateSubscriptionHeartbeats
      parameters:
        - in: body
          name: subscriptionIds
          description: Subscription IDs
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        200:
          description: Success
          schema:
            description: The update subscriptions heartbeat response
            type: object
            title: Update Subscriptions Heartbeat Response
            properties:
              invalidSubscriptionIds:
                description: List of invalid subscription IDs
                type: array
                items:
                  type: string
        401:
          $ref: '#/responses/Unauthorized'
        default:
          $ref: '#/responses/Error'
  /v2/tags-rpc/subscriptions/query-values:
    post:
      tags:
        - subscriptions
      summary: 'Get the current values for the tags from multiple subscriptions'
      description: Get the current values for all tags in multiple subscriptions
      operationId: GetSubscriptionsTagValues
      parameters:
        - in: body
          name: subscriptionIds
          description: Subscription IDs
          schema:
            type: array
            items:
              type: string
          required: false
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/SubscriptionUpdates'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Subscription with the given ID was not found
        default:
          $ref: '#/responses/Error'
  /v2/tags-rpc/subscriptions/delete:
    post:
      tags:
        - subscriptions
      summary: 'Delete multiple subscriptions'
      description: Delete one or more subscriptions based on the request body.
      operationId: DeleteSubscriptions
      parameters:
        - in: body
          name: subscriptionIds
          description: Subscription IDs
          schema:
            type: array
            items:
              type: string
          required: false
      responses:
        200:
          description: Success
          schema:
            description: Response for deleting subscriptions
            type: object
            title: Delete Subscriptions Response
            properties:
              invalidSubscriptionIds:
                description: List of invalid subscription IDs
                type: array
                items:
                  type: string
        401:
          $ref: '#/responses/Unauthorized'
        default:
          $ref: '#/responses/Error'
  /v2/selections:
    post:
      tags:
        - selections
      summary: 'Create selection'
      description: Create a selection containing a collection of tags to perform subsequent operations on.
      operationId: CreateSelection
      parameters:
        - in: body
          name: selection
          description: The selection to create
          schema:
            $ref: '#/definitions/Selection'
          required: false
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Selection'
        400:
          description: Bad Request
        401:
          $ref: '#/responses/Unauthorized'
        409:
          description: Duplicate selection
        default:
          $ref: '#/responses/Error'
    get:
      tags:
        - selections
      summary: 'Get all selections'
      description: Get all selections.
      operationId: GetSelections
      parameters: []
      responses:
        200:
          schema:
            type: array
            items:
              $ref: '#/definitions/Selection'
          description: Success
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Selection with the given ID not found
        default:
          $ref: '#/responses/Error'
  /v2/selections/{id}:
    put:
      tags:
        - selections
      summary: 'Update selection'
      description: Modify a selection
      operationId: UpdateSelection
      parameters:
        - in: path
          name: id
          description: Selection ID
          type: string
          required: true
        - in: body
          name: selection
          description: Selection to replace the existing selection with
          schema:
            $ref: '#/definitions/Selection'
          required: false
      responses:
        200:
          schema:
            $ref: '#/definitions/Selection'
          description: Success
        400:
          description: Bad Request
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Selection with the given ID was not found
        default:
          $ref: '#/responses/Error'
    get:
      tags:
        - selections
      summary: 'Get selection'
      description: Get a selection's metadata.
      operationId: GetSelection
      parameters:
        - in: path
          name: id
          description: Selection ID
          type: string
          required: true
      responses:
        200:
          schema:
            $ref: '#/definitions/Selection'
          description: Success
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Selection with the given ID was not found
        default:
          $ref: '#/responses/Error'
    delete:
      tags:
        - selections
      summary: 'Delete selection'
      description: Delete a selection
      operationId: DeleteSelection
      parameters:
        - in: path
          name: id
          description: Selection ID
          type: string
          required: true
      responses:
        204:
          description: Successfully deleted
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Selection with the given ID was not found
  /v2/selections/{id}/tags-with-values:
    get:
      tags:
        - selections
      summary: 'Get current values in selection'
      description: Get the current values and aggregates of the tags in a selection.
      operationId: GetSelectionTagsWithValues
      parameters:
        - in: path
          name: id
          description: The selection ID
          type: string
          required: true
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/TagsWithValuesAndTotalCount'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Selection with the given ID was not found
        default:
          $ref: '#/responses/Error'
  /v2/selections/{id}/tags:
    get:
      tags:
        - selections
      summary: 'Get the tags in a selection'
      # TODO: in the description, mention if the selections have current values
      description: Get the tags in a selection.
      operationId: GetSelectionTags
      parameters:
        - in: path
          name: id
          description: Selection ID
          type: string
          required: true
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/Tag'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Selection with the given ID was not found
        default:
          $ref: '#/responses/Error'
    delete:
      tags:
        - selections
      summary: 'Delete all of the tags in a selection'
      description: Delete all of the tags in a seletion
      operationId: DeleteSelectionTags
      parameters:
        - in: path
          name: id
          description: Selection ID
          type: string
          required: true
      responses:
        204:
          description: Successfully deleted
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Selection with the given ID was not found
        default:
          $ref: '#/responses/Error'
  /v2/selections/{id}/values:
    get:
      tags:
        - selections
      summary: 'Get the values of the tags in a selection'
      description: Get the current values of the tags in a given selection
      operationId: GetSelectionValues
      parameters:
        - in: path
          name: id
          description: Selection ID
          type: string
          required: true
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              $ref: '#/definitions/TagPathWithCurrentAndAggregateValue'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Selection with the given ID was not found
        default:
          $ref: '#/responses/Error'
  /v2/selections/{id}/values/current:
    get:
      tags:
        - selections
      summary: 'Get the current times values of the tags in a selection with timestamps'
      description: Get the current values of the tags in a selection with timestamps
      operationId: GetSelectionCurrentTimestampedValues
      parameters:
        - in: path
          name: id
          description: The selection ID
          type: string
          required: true
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              description: Tag path with current value (timestamped)
              type: object
              title: Tag Path With Current Value
              properties:
                path:
                  type: string
                  description: Tag path
                current:
                  $ref: '#/definitions/TagCurrentValue'
                  # TODO: should be TagCurrentTimestampedValue
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Selection with the given ID was not found
        default:
          $ref: '#/responses/Error'
  /v2/selections/{id}/values/current/value:
    get:
      tags:
        - selections
      summary: 'Get the current values of the tags in a selection (without timestamps)'
      description: Get the current timestamped values of the tags in a selection
      operationId: GetSelectionCurrentValues
      parameters:
        - in: path
          name: id
          description: Selection ID
          type: string
          required: true
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              description: Tag path with timestamped value
              type: object
              title: Tag Path With Value
              properties:
                path:
                  type: string
                  description: Tag path
                current:
                  $ref: '#/definitions/TagValue'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Selection with the given ID was not found
        default:
          $ref: '#/responses/Error'
  /v2/selections/{id}/values/current/timestamp:
    get:
      tags:
        - selections
      summary: 'Get the current value timestamps for the tags in a selection'
      # TODO: is it really the current value timestamp here?
      description: Get the current value timestamps for the tags in a selection
      operationId: GetSelectionValuesCurrentTimestamp
      parameters:
        - in: path
          name: id
          description: The selection ID
          type: string
          required: true
      responses:
        200:
          description: Success
          schema:
            description: Array containing the paths of the tags in the selection, along with the timestamp of their current values.
            type: array
            # TODO: verify this is really an array.. cloud called it an object initially
            title: Tag Paths With Timestamps
            items:
              type: object
              title: Tag Path and Timestamp
              description: A tag path and the timestamp of it's current value
              properties:
                timestamp:
                  description: The current value's timestamp
                  type: string
                path:
                  description: The tag path
                  type: string
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Selection with the given ID was not found
        default:
          $ref: '#/responses/Error'
  /v2/selections/{id}/values/aggregates/min:
    get:
      tags:
        - selections
      summary: 'Get the minimum aggregate values for a selection'
      description: Get the minimum values from a selection's aggregates
      operationId: GetSelectionMinValues
      parameters:
        - in: path
          name: id
          description: The selection ID
          type: string
          required: true
      responses:
        200:
          description: Success
          schema:
            description: Array containing the minimum values from the aggregates for each tag in the selection.
            type: array
            items:
              type: object
              title: Tag Paths and Count Values
              properties:
                path:
                  description: Tag path
                  type: string
                min:
                  description: Countum value from the tag's aggregates
                  type: number
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Selection with the given ID was not found
        default:
          $ref: '#/responses/Error'
  /v2/selections/{id}/values/aggregates/max:
    get:
      tags:
        - selections
      summary: 'Get the maximum value from the aggregates of a selection''s tags'
      description: Get the maximum value from the aggregates of a selection's tags
      operationId: GetSelectionMaxAggregates
      parameters:
        - in: path
          name: id
          description: Selection ID
          type: string
          required: true
      responses:
        200:
          description: Success
          schema:
            type: array
            items:
              description: The tag path with the maximum value from its aggregates
              type: object
              title: Tag Path With Aggregate Max
              properties:
                path:
                  description: Tag path
                  type: string
                max:
                  description: Maximum value from the tag's aggregates
                  type: number
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Selection with the given ID was not found
        default:
          $ref: '#/responses/Error'
  /v2/selections/{id}/values/aggregates/mean:
    get:
      tags:
        - selections
      summary: 'Get the mean aggregate values for a selection'
      description: Get the mean values from a selection's aggregates
      operationId: GetSelectionMeanValues
      parameters:
        - in: path
          name: id
          description: Selection ID
          type: string
          required: true
      responses:
        200:
          description: Success
          schema:
            description: Array containing the mean values from the aggregates for each tag in the selection.
            type: array
            items:
              type: object
              title: Tag Path and Mean Value
              properties:
                path:
                  description: The tag path
                  type: string
                mean:
                  description: Mean value from the tag's aggregates
                  type: number
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Selection with the given ID was not found
        default:
          $ref: '#/responses/Error'
  /v2/selections/{id}/values/aggregates/count:
    get:
      tags:
        - selections
      summary: 'Get the count aggregate values for a selection'
      description: Get the count aggregate values from a selection's aggregates
      operationId: GetSelectionCountValues
      parameters:
        - in: path
          name: id
          description: Selection ID
          type: string
          required: true
      responses:
        200:
          description: Success
          schema:
            description: Array containing the count values from the aggregates for each tag in the selection.
            type: array
            items:
              type: object
              title: Tag Paths and Count Values
              properties:
                path:
                  description: Tag path
                  type: string
                count:
                  description: Count value from the tag's aggregates
                  type: number
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Selection with the given ID was not found
        default:
          $ref: '#/responses/Error'
  /v2/selections/{id}/reset-aggregates:
    post:
      tags:
        - selections
      summary: 'Reset the aggregates of all tags in a selection'
      description: Reset the aggregates of all tags in a selection
      operationId: ResetSelectionAggregates
      parameters:
        - in: path
          name: id
          description: Selection ID
          type: string
          required: true
      responses:
        204:
          description: No Content
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Selection with the given ID not found
        default:
          $ref: '#/responses/Error'
  /v2/update-tags:
    post:
      tags:
        - tags
      summary: 'Create or update multiple tags'
      description: Create or update multiple tags in one request.
      operationId: CreateOrUpdateTags
      parameters:
        - in: body
          name: tagsAndMerge
          description: The tags to create or update, and a flag specifying whether keywords and properties should be merged for updates.
          schema:
            type: array
            items:
              type: object
              title: Tag List and Merge Flag
              properties:
                tags:
                  description: A list of tags
                  type: array
                  items:
                    $ref: '#/definitions/Tag'
                merge:
                  description: 'If set, performs a merge of any specified Keywords or Properties.'
                  type: boolean
          required: true
      responses:
        201:
          description: Created
        400:
          description: Bad Request
        401:
          $ref: '#/responses/Unauthorized'
        409:
          description: 'Conflict: Type change not supported'
        default:
          $ref: '#/responses/Error'
  /v2/tags:
    post:
      tags:
        - tags
      summary: 'Create or update a tag'
      description: Create or update single tag. Performs a merge of any specified Keywords or Properties. Changing a tag's type is not supported.
      operationId: CreateTag
      parameters:
        - in: body
          name: tags
          description: Tag to create
          schema:
            type: array
            items:
              $ref: '#/definitions/Tag'
          required: true
      responses:
        201:
          description: 'Created: Tag created successfully'
        400:
          description: Bad Request
        401:
          $ref: '#/responses/Unauthorized'
        409:
          description: 'Conflict: Type change not supported'
        default:
          $ref: '#/responses/Error'
    get:
      tags:
        - tags
      summary: 'Get multiple tags'
      description: 'Get a list of tags, filtered based on the provided query parameters.'
      operationId: GetTags
      parameters:
        - in: query
          name: path
          description: Comma-separated list of tag paths. May include glob-style wildcards
          type: string
          required: false
        - in: query
          name: keywords
          description: Comma-separated list of case-sensitive keywords.
          type: string
          required: false
        - in: query
          name: properties
          description: Comma-separated list of key/value property pairs.
          type: string
          required: false
        - in: query
          name: skip
          description: Used for pagination. Specifies the number of entries to skip in the response list. Typically used in combination with the take parameter.
          type: integer
          required: false
        - in: query
          name: take
          description: Used for pagination. Specfies the number of entries to include in the response list. Typically used in combination with the skip parameter.
          type: integer
          required: false
      responses:
        200:
          schema:
            $ref: '#/definitions/TagList'
          description: Success
        401:
          $ref: '#/responses/Unauthorized'
        default:
          $ref: '#/responses/Error'
  /v2/tags-count:
    get:
      tags:
        - tags
      summary: 'Get the total number of tags'
      description: Get a count of the total number of tags.
      operationId: GetTagCount
      parameters: []
      responses:
        200:
          description: Contains the number of tags
        401:
          $ref: '#/responses/Unauthorized'
        default:
          $ref: '#/responses/Error'
  /v2/tags-with-values:
    get:
      tags:
        - tags
      # TODO: tag with tagCurrentValue or tags?
      summary: 'Get the current values of multiple tags'
      responses:
        200:
          schema:
            $ref: '#/definitions/TagsWithValuesAndTotalCount'
          description: Success
        400:
          description: Bad Request
        401:
          $ref: '#/responses/Unauthorized'
        409:
          description: Conflict
        default:
          $ref: '#/responses/Error'
      description: 'Get a list of tags with their values in a single request, filtered based on the provided query parameters.'
      operationId: GetTagsWithValues
      parameters:
        - in: query
          name: path
          description: Comma-separated list of tag paths. May include glob-style wildcards.
          type: string
          required: false
        - in: query
          name: keywords
          description: Comma-separated list of case-sensitive keywords
          type: string
          required: false
        - in: query
          name: properties
          description: Comma-separated list of key/value property pairs
          type: string
          required: false
        - in: query
          name: skip
          description: Used for pagination. Specifies the number of entries to skip in the response list. Typically used in combination with the take parameter.
          type: integer
          required: false
        - in: query
          name: take
          description: Used for pagination. Specfies the number of entries to include in the response list. Typically used in combination with the skip parameter.
          type: integer
          required: false
  /v2/tags-with-values/{path}:
    get:
      tags:
        - tags
      # TODO: should this be tagsCurrentValue?
      summary: 'Get a tag and its current value'
      description: Get a tag and its value
      operationId: GetTagWithValue
      parameters:
        - in: path
          name: path
          description: The tag path
          type: string
          required: true
      responses:
        200:
          schema:
            $ref: '#/definitions/TagWithValue'
          description: Success
        400:
          description: Bad Request
        401:
          $ref: '#/responses/Unauthorized'
        default:
          $ref: '#/responses/Error'
  /v2/tags/{path}:
    put:
      tags:
        - tags
      summary: 'Create or replace a tag'
      description: 'Replace the tag at <path>, or create one if one doesn''t exist. A complete resource representation must be sent (no partial updates).'
      operationId: CreateOrReplaceTag
      parameters:
        - in: path
          name: path
          description: Tag path
          type: string
          required: true
        - in: body
          name: tag
          description: Tag to create or replace
          schema:
            $ref: '#/definitions/Tag'
          required: true
      responses:
        201:
          description: 'Created: Tag created successfully'
        204:
          description: 'No Content: Tag replaced successfully'
        401:
          $ref: '#/responses/Unauthorized'
        409:
          description: 'Conflict: Type change not supported'
    get:
      tags:
        - tags
      summary: 'Get a tag'
      description: Get the metadata of a single tag.
      operationId: GetTag
      parameters:
        - in: path
          name: path
          description: The tag path
          type: string
          required: true
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/Tag'
        401:
          $ref: '#/responses/Unauthorized'
        default:
          $ref: '#/responses/Error'
  /v2/tags/{path}/values:
    get:
      tags:
        - tags
      # TODO: should this be tagsCurrentValue?
      summary: 'Get the aggregates and current value of a tag'
      description: Get the current and aggregate values for the tag at <path>.
      operationId: get-tag-values
      parameters:
        - in: path
          name: path
          description: Tag path
          type: string
          required: true
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/TagCurrentAndAggregateValue'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Tag not found
        default:
          $ref: '#/responses/Error'
  /v2/tags/{path}/values/current:
    get:
      tags:
        - tags
      # TODO: should this be tagsCurrentValue?
      summary: 'Get the current value of a tag'
      description: Get the current value of the tag at <path>.
      operationId: get-tag-values-current
      parameters:
        - in: path
          name: path
          description: Tag path
          type: string
          required: true
      responses:
        200:
          description: Success
          schema:
            $ref: '#/definitions/TagCurrentValue'
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Tag not found
        default:
          $ref: '#/responses/Error'
    put:
      tags:
        - tags
      # TODO: shold the tag be tagsCurrentValue?
      summary: 'Update the current value of a tag'
      description: Update the current value of the tag at <path>.
      operationId: UpdateTagCurrentValue
      responses:
        200:
          description: Tag Value Updated
        400:
          description: Bad Request
        401:
          $ref: '#/responses/Unauthorized'
        409:
          description: Conflict
        default:
          $ref: '#/responses/Error'
      parameters:
        - in: path
          name: path
          description: Tag path
          type: string
          required: true
        - in: body
          name: tagValue
          description: The timestamped value
          schema:
            $ref: '#/definitions/TagCurrentValue'
          required: true
  /v2/tags/{path}/values/current/timestamp:
    get:
      tags:
        - tags
      # TODO: should this be tagged with tagsCurrentValue?
      summary: 'Get the timestamp of a tag''s current value'
      description: Get tag most recent timestamp.
      operationId: get-tag-values-current-timestamp
      parameters:
        - in: path
          name: path
          description: The tag path
          type: string
          required: true
      responses:
        200:
          description: Timestamp
        204:
          description: No timestamped value found
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Tag not found
        default:
          $ref: '#/responses/Error'
  /v2/tags/{path}/values/current/value:
    get:
      tags:
        - tags
      # TODO: should this be tagsCurrentValue?
      summary: 'Get the current value of a tag without its timestamp'
      description: Get the current value of a tag
      operationId: GetTagCurrentValue
      parameters:
        - in: path
          name: path
          description: The tag path
          type: string
          required: true
      responses:
        200:
          schema:
            $ref: '#/definitions/TagValue'
          description: Success
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Tag not found
        default:
          $ref: '#/responses/Error'
  /v2/tags/{path}/values/aggregates/min:
    get:
      tags:
        - tagAggregates
      # TODO: should this be tagCurrentValueAggregates?
      summary: 'Get the minimum value from a tag''s aggregates'
      description: Get the minimum value from a tag's aggregates
      operationId: GetTagMinimum
      parameters:
        - in: path
          name: path
          description: The tag path
          type: string
          required: true
      responses:
        200:
          description: The aggregate value
        204:
          description: No aggregate value found
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Tag with the given path not found
        default:
          $ref: '#/responses/Error'
  /v2/tags/{path}/values/aggregates/max:
    get:
      tags:
        - tagAggregates
      # TODO: should the tag be tagCurrentValueAggregates?
      summary: 'Get the maximum value from a tag''s aggregates'
      description: Get the maximum value from a tag''s aggregates'
      operationId: GetTagMaxAggregate
      responses:
        200:
          description: Aggregate value
          # TODO: for this and other 200 responses which don't have a schema but return something, we should probably have a schema!
        204:
          description: No aggregate value found
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Tag with the given path not found
        default:
          $ref: '#/responses/Error'
      parameters:
        - in: path
          name: path
          description: Tag path
          type: string
          required: true
  /v2/tags/{path}/values/aggregates/mean:
    get:
      tags:
        - tagAggregates
      # TODO: should the tag be tagCurrentValueAggregates?
      summary: 'Get the mean value from a tag''s aggregates'
      description: Get the mean value from a tag''s aggregates'
      operationId: GetTagMeanAggregate
      responses:
        200:
          description: Aggregate value
          # TODO: for this and other 200 responses which don't have a schema but return something, we should probably have a schema!
        204:
          description: No aggregate value found
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Tag with the given path not found
        default:
          $ref: '#/responses/Error'
      parameters:
        - in: path
          name: path
          description: Tag path
          type: string
          required: true
  /v2/tags/{path}/values/aggregates/count:
    get:
      tags:
        - tagAggregates
        # TODO: should this be tagsCurrentValueAggregates?
      summary: 'Get the count value from a tag''s aggregates'
      # TODO: maybe "Get the value of a tag's 'count' aggregate"
      description: Get the count value from a tag''s aggregates'
      operationId: GetTagCountAggregate
      parameters:
        - in: path
          name: path
          description: Tag path
          type: string
          required: true
      responses:
        200:
          description: Aggregate value
        204:
          description: No aggregate value found
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Tag with the given path not found
        default:
          $ref: '#/responses/Error'
  /v2/tags/{path}/reset-aggregates:
    post:
      tags:
        - tagAggregates
      # TODO: tag with tagsCurrentValueAggregates or tags?
      summary: 'Reset the aggregates of a tag'
      description: Reset tag aggregates
      operationId: ResetTagAggregates
      parameters:
        - in: path
          name: path
          description: The tag path
          type: string
          required: true
      responses:
        200:
          description: Success
        401:
          $ref: '#/responses/Unauthorized'
        404:
          description: Tag with the given path not found
        default:
          $ref: '#/responses/Error'
  /v2/tags-rpc/update-current-values:
    post:
      tags:
        - tags
      # TODO: should this be tagged with tagsRpc?
      summary: 'Update the current values of multiple tags'
      description: Push multiple current value updates to multiple tags in one request.
      operationId: UpdateTagCurrentValues
      parameters: []
      responses:
        200:
          description: Success
          schema:
            type: object
            title: Tag Updates
            properties:
              updates:
                description: Updates to apply
                type: array
                items:
                  $ref: '#/definitions/TagCurrentAndAggregateValue'
              path:
                type: string
                description: Tag path
        400:
          description: Bad Request
        401:
          $ref: '#/responses/Unauthorized'
        default:
          $ref: '#/responses/Error'
  /v2/tags/{path}/update-values:
    post:
      tags:
        - tags
      # TODDO: should this be tagscurrentvalue?
      summary: 'Send multiple value updates to a tag'
      description: Push a list of current value update objects to update the value of the tag at <path> multiple times. This can be used to send value history in bulk.
      operationId: update-tag-values
      responses:
        200:
          description: Tag Values Updated
        400:
          description: Bad Request
        401:
          $ref: '#/responses/Unauthorized'
        409:
          description: Conflict
        default:
          $ref: '#/responses/Error'
      parameters:
        - in: path
          name: path
          description: Tag path
          type: string
          required: true
        - in: body
          name: tagValues
          description: Timestamped values
          schema:
            type: array
            items:
              $ref: '#/definitions/TagCurrentValue'
          required: true

definitions:
  Error:
    description: Contains error information
    type: object
    properties:
      name:
        description: String error code
        type: string
      code:
        description: Numeric error code
        type: integer
      resourceType:
        description: Type of resource associated with the error
        type: string
      resourceId:
        description: Identifier of the resource associated with the error
        type: string
      message:
        description: Complete error message
        type: string
      args:
        description: Positional argument values for the error code
        type: array
        items:
          type: string
      innerErrors:
        type: array
        items:
          $ref: '#/definitions/Error'
    example:
      name: Skyline.OneOrMoreErrorsOccurred
      code: -251040
      message: One or more errors occurred. See the contained list for details of each error.
      args: []
      innerErrors:
        - name: Message.SessionTokenNotFound
          # TODO: tag-specific example
          code: -251608
          resourceType:
          resourceId:
          message: Session token 'f755d531-2403-433f-a0b7-463ccb8f2b9' not found.
          args: ['f755d531-2403-433f-a0b7-463ccb8f2b9']
  # TODO: examples for all of these guys
  TagsWithValuesAndTotalCount:
    description: A list of tags with current values and the total count
    type: object
    title: Tag List with Current Values
    properties:
      totalCount:
        description: Total number of tags in a query response
        type: integer
      tagsWithValues:
        description: List of tags with their values
        type: array
        items:
          $ref: '#/definitions/TagWithValue'
  TagWithValue:
    description: A tag and its current value
    type: object
    title: Tag with value
    properties:
      tag:
        $ref: '#/definitions/Tag'
      current:
        $ref: '#/definitions/TagCurrentValue'
      aggregates:
        $ref: '#/definitions/TagAggregates'
  TagValue:
    description: Value of a tag
    type: object
    title: Tag Value
    properties:
      value:
        description: Tag value
        type: string
      type:
        description: Tag type
        type: string
  TagPathWithCurrentAndAggregateValue:
    description: Tag path with its current value and aggregates
    type: object
    title: Tag Path Current And Aggregate Value
    properties:
      path:
        type: string
        description: Tag path
      current:
        $ref: '#/definitions/TagCurrentValue'
      aggregates:
        $ref: '#/definitions/TagAggregates'
  TagList:
    description: A list of tags without current values
    type: object
    title: Tag List
    properties:
      totalCount:
        type: integer
        description: Total number of tags which match a given query
      tags:
        description: List of tags
        type: array
        items:
          $ref: '#/definitions/Tag'
  TagCurrentValue:
    description: The current value of a tag
    type: object
    title: Tag Current Value
    properties:
      value:
        $ref: '#/definitions/TagValue'
      timestamp:
        description: The timestamp associated with the value
        type: string
  TagCurrentAndAggregateValue:
    description: The current and aggregate values for a tag
    type: object
    title: Tag Current And Aggregate Value
    properties:
      current:
        $ref: '#/definitions/TagCurrentValue'
      aggregates:
        $ref: '#/definitions/TagAggregates'
  TagAggregates:
    description: The aggregate values of a tag
    type: object
    title: Tag Aggregate Value
    properties:
      sum:
        type: number
        description: Sum aggregate value
      min:
        type: number
        description: Minimum aggregate value
      max:
        type: number
        description: Maximum aggregate value
      count:
        type: integer
        description: Count aggregate value
      avg:
        type: number
        description: Average aggregate value
  Tag:
    description: Object containing a tag's metadata, without its current or aggregate values
    type: object
    title: Tag
    properties:
      type:
        type: string
        description: Type
      properties:
        type: object
        description: Properties
      path:
        type: string
        description: Path
      keywords:
        type: array
        items:
          type: string
        description: Keywords
      collectAggregates:
        description: Whether to collect aggregates
        type: boolean
  SubscriptionUpdates:
    description: Updates for a list of subscriptions
    type: object
    title: Subscription Updates
    properties:
      subscriptionUpdates:
        description: Subscription updates
        type: array
        items:
          $ref: '#/definitions/SubscriptionUpdate'
      invalidSubscriptionIds:
        description: List of invalid subscription IDs
        type: array
        items:
          type: string
  SubscriptionUpdate:
    description: Updates for a subscriptions
    type: object
    title: Subscription Update
    properties:
      updates:
        description: List of updates
        type: array
        items:
          $ref: '#/definitions/SubscriptionTagUpdate'
      subscriptionId:
        description: Unique identifier of the subscription
        type: string
      nonexistentTags:
        description: List of tags which did not exist
        type: array
        items:
          type: string
      deletedTags:
        description: List of tags which have been deleted
        type: array
        items:
          type: string
      createdTags:
        description: List of tags which have been created
        type: array
        items:
          type: string
      alias:
        description: Name of the subscription
        type: string
  SubscriptionTagUpdate:
    description: Update details for a tag subscription
    type: object
    title: Subscription Tag Update
    properties:
      value:
        type: string
        description: Updated tag value
      type:
        type: string
        description: Tag type
      timestamp:
        type: string
        description: The updated timestamp
      tag:
        $ref: '#/definitions/Tag'
      aggregates:
        $ref: '#/definitions/TagAggregates'
  Subscription:
    description: Object describing a subscription's metadata
    type: object
    title: Get Subscription Response
    properties:
      updatesOnly:
        description: Whether to notify only about updates
        type: boolean
      tags:
        description: List of subscribed tags
        type: array
        items:
          type: string
      alias:
        description: Name of the subscription
        type: string
  Selection:
    description: Object describing a selection's metadata
    type: object
    title: Selection
    required:
      - searchPaths
    properties:
      searchPaths:
        description: Tag search paths
        type: array
        items:
          type: string
      inactivityTimeout:
        description: Inactivity timeout
        type: integer
      id:
        type: string
        description: Selection ID
